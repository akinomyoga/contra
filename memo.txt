

------------------------------------------------------------------------------
  ToDo
------------------------------------------------------------------------------

2020-07-13

* term: TEK (DEC -> TEK に略号が変わっている物を escseq に適用する?)
* term: Reserch, Inc. Model 16 を escseq に適用する
* Tera Term がマニュアルで xterm 等の制御機能に名前をつけている。
  それらの非標準な略号もまとめて置く事にする。

2016-09-25

* カーソル位置
  ToDo: HT CR
  ToDo: LNM (VT), LF/NLM (ECMA-48)

2016-09-23

* DECDHL, DECDWL, DECSWL それぞれの互換性についてチェックする。

* PLD, PLU の ECMA の記述を確認する。

* PLD, PLU の互換性についても調べる。

* ECMA-48 の制御関数の一覧と、ドキュメント済みの物の一覧

  > [ECMA-48/8.3.2] APC: Application Program Command  33
  > [ECMA-48/8.3.5] BS: Backspace  34
  > [ECMA-48/8.3.7] CBT: CURSOR BACKWARD TABULATION  34
  > [ECMA-48/8.3.9] CHA: Cursor Character Absolute  34
  > [ECMA-48/8.3.10] CHT: CURSOR FORWARD TABULATION  34
  > [ECMA-48/8.3.12] CNL: Cursor Next Line  35
  > [ECMA-48/8.3.13] CPL: Cursor Preceding Line  35
  > [ECMA-48/8.3.15] CR: Carriage Return  35
  > [ECMA-48/8.3.16] CSI: Control Sequence Introducer  36
  > [ECMA-48/8.3.17] CTC: CURSOR TABULATION CONTROL  36
  > [ECMA-48/8.3.18] CUB: Cursor Left  36
  > [ECMA-48/8.3.19] CUD: Cursor Down  36
  > [ECMA-48/8.3.20] CUF: Cursor Right  36
  > [ECMA-48/8.3.21] CUP: Cursor Position  36
  > [ECMA-48/8.3.22] CUU: Cursor Up  37
  > [ECMA-48/8.3.23] CVT: CURSOR LINE TABULATION  37
  > [ECMA-48/8.3.26] DCH: Delete Character  38
  > [ECMA-48/8.3.27] DCS: Device Control String  38
  > [ECMA-48/8.3.32] DL: Delete Line  39
  > [ECMA-48/8.3.37] EA: Erase In Area  40
  > [ECMA-48/8.3.38] ECH: Erase Character  41
  > [ECMA-48/8.3.39] ED: Erase In Page  41
  > [ECMA-48/8.3.40] EF: Erase In Field  41
  > [ECMA-48/8.3.41] EL: Erase In Line  42
  > [ECMA-48/8.3.48] ESC: Escape  43
  > [ECMA-48/8.3.51] FF: Form Feed  44
  > [ECMA-48/8.3.57] HPA: Character Position Absolute  45
  > [ECMA-48/8.3.58] HPB: Character Position Backward  45
  > [ECMA-48/8.3.59] HPR: Character Position Forward  45
  > [ECMA-48/8.3.60] HT: CHARACTER TABULATION  45
  > [ECMA-48/8.3.61] HTJ: CHARACTER TABULATION WITH JUSTIFICATION  46
  > [ECMA-48/8.3.62] HTS: CHARACTER TABULATION SET  46
  > [ECMA-48/8.3.63] HVP: Character And Line Position  46
  > [ECMA-48/8.3.64] ICH: Insert Character  46
  > [ECMA-48/8.3.67] IL: Insert Line  47
  > [ECMA-48/8.3.74] LF: Line Feed  49
  > [ECMA-48/8.3.86] NEL: Next Line  51
  > [ECMA-48/8.3.88] NUL: NULL  51
  > [ECMA-48/8.3.89] OSC: Operating System Command  51
  > [ECMA-48/8.3.92] PLD: Partial Line Forward  52
  > [ECMA-48/8.3.93] PLU: Partial Line Backward  53
  > [ECMA-48/8.3.94] PM: Privacy Message  53
  > [ECMA-48/8.3.104] RI: REVERSE LINE FEED  55
  > [ECMA-48/8.3.106] RM: Reset Mode  56
  > [ECMA-48/8.3.111] SCP: Select Character Path  58
  > [ECMA-48/8.3.114] SDS: Start Directed String  59
  > [ECMA-48/8.3.115] SEE: Select Editing Extent  60
  > [ECMA-48/8.3.117] SGR: Select Graphic Rendition  61
  > [ECMA-48/8.3.120] SIMD: Select Implicit Movement Direction  63
  > [ECMA-48/8.3.122] SLH: Set Line Home  64
  > [ECMA-48/8.3.123] SLL: Set Line Limit  64
  > [ECMA-48/8.3.125] SM: Set Mode  65
  > [ECMA-48/8.3.128] SOS: Start Of String  66
  > [ECMA-48/8.3.130] SPD: Select Presentation Directions  66
  > [ECMA-48/8.3.131] SPH: Set Page Home  67
  > [ECMA-48/8.3.133] SPL: Set Page Limit  68
  > [ECMA-48/8.3.137] SRS: Start Reversed String  69
  > [ECMA-48/8.3.143] ST: STRING TERMINATOR  70
  > [ECMA-48/8.3.144] STAB: SELECTIVE TABULATION  71
  > [ECMA-48/8.3.151] TAC: TABULATION ALIGNED CENTRED  72
  > [ECMA-48/8.3.152] TALE: TABULATION ALIGNED LEADING EDGE  72
  > [ECMA-48/8.3.153] TATE: TABULATION ALIGNED TRAILING EDGE  72
  > [ECMA-48/8.3.154] TBC: TABULATION CLEAR  73
  > [ECMA-48/8.3.155] TCC: TABULATION CENTRED ON CHARACTER  73
  > [ECMA-48/8.3.156] TSR: TABULATION STOP REMOVE  73
  > [ECMA-48/8.3.158] VPA: Line Position Absolute  74
  > [ECMA-48/8.3.159] VPB: Line Position Backward  74
  > [ECMA-48/8.3.160] VPR: Line Position Forward  74
  > [ECMA-48/8.3.161] VT: Line Tabulation  74
  > [ECMA-48/8.3.162] VTS: LINE TABULATION SET  74
  [ECMA-48/8.3.1] ACK: ACKNOWLEDGE  33
  [ECMA-48/8.3.3] BEL: BELL  33
  [ECMA-48/8.3.4] BPH: BREAK PERMITTED HERE  33
  [ECMA-48/8.3.6] CAN: CANCEL  34
  [ECMA-48/8.3.8] CCH: CANCEL CHARACTER  34
  [ECMA-48/8.3.11] CMD: CODING METHOD DELIMITER  34
  [ECMA-48/8.3.14] CPR: ACTIVE POSITION REPORT  35
  [ECMA-48/8.3.24] DA: DEVICE ATTRIBUTES  37
  [ECMA-48/8.3.25] DAQ: DEFINE AREA QUALIFICATION  37
  [ECMA-48/8.3.28] DC1: DEVICE CONTROL ONE  38
  [ECMA-48/8.3.29] DC2: DEVICE CONTROL TWO  38
  [ECMA-48/8.3.30] DC3: DEVICE CONTROL THREE  39
  [ECMA-48/8.3.31] DC4: DEVICE CONTROL FOUR  39
  [ECMA-48/8.3.33] DLE: DATA LINK ESCAPE  39
  [ECMA-48/8.3.34] DMI: DISABLE MANUAL INPUT  39
  [ECMA-48/8.3.35] DSR: DEVICE STATUS REPORT  40
  [ECMA-48/8.3.36] DTA: DIMENSION TEXT AREA  40
  [ECMA-48/8.3.42] EM: END OF MEDIUM  42
  [ECMA-48/8.3.43] EMI: ENABLE MANUAL INPUT  42
  [ECMA-48/8.3.44] ENQ: ENQUIRY  43
  [ECMA-48/8.3.45] EOT: END OF TRANSMISSION  43
  [ECMA-48/8.3.46] EPA: END OF GUARDED AREA  43
  [ECMA-48/8.3.47] ESA: END OF SELECTED AREA  43
  [ECMA-48/8.3.49] ETB: END OF TRANSMISSION BLOCK  43
  [ECMA-48/8.3.50] ETX: END OF TEXT  43
  [ECMA-48/8.3.52] FNK: FUNCTION KEY  44
  [ECMA-48/8.3.53] FNT: FONT SELECTION  44
  [ECMA-48/8.3.54] GCC: GRAPHIC CHARACTER COMBINATION  44
  [ECMA-48/8.3.55] GSM: GRAPHIC SIZE MODIFICATION  45
  [ECMA-48/8.3.56] GSS: GRAPHIC SIZE SELECTION  45
  [ECMA-48/8.3.65] IDCS: IDENTIFY DEVICE CONTROL STRING  47
  [ECMA-48/8.3.66] IGS: IDENTIFY GRAPHIC SUBREPERTOIRE  47
  [ECMA-48/8.3.68] INT: INTERRUPT  48
  [ECMA-48/8.3.69] IS1: INFORMATION SEPARATOR ONE (US: UNIT SEPARATOR)  48
  [ECMA-48/8.3.70] IS2: INFORMATION SEPARATOR TWO (RS: RECORD SEPARATOR)  48
  [ECMA-48/8.3.71] IS3: INFORMATION SEPARATOR THREE (GS: GROUP SEPARATOR)  48
  [ECMA-48/8.3.72] IS4: INFORMATION SEPARATOR FOUR (FS: FILE SEPARATOR)  48
  [ECMA-48/8.3.73] JFY: JUSTIFY  48
  [ECMA-48/8.3.75] LS0: LOCKING-SHIFT ZERO  49
  [ECMA-48/8.3.76] LS1: LOCKING-SHIFT ONE  49
  [ECMA-48/8.3.77] LS1R: LOCKING-SHIFT ONE RIGHT  49
  [ECMA-48/8.3.78] LS2: LOCKING-SHIFT TWO  49
  [ECMA-48/8.3.79] LS2R: LOCKING-SHIFT TWO RIGHT  49
  [ECMA-48/8.3.80] LS3: LOCKING-SHIFT THREE  50
  [ECMA-48/8.3.81] LS3R: LOCKING-SHIFT THREE RIGHT  50
  [ECMA-48/8.3.82] MC: MEDIA COPY  50
  [ECMA-48/8.3.83] MW: MESSAGE WAITING  50
  [ECMA-48/8.3.84] NAK: NEGATIVE ACKNOWLEDGE  50
  [ECMA-48/8.3.85] NBH: NO BREAK HERE  50
  [ECMA-48/8.3.87] NP: NEXT PAGE  51
  [ECMA-48/8.3.90] PEC: PRESENTATION EXPAND OR CONTRACT  51
  [ECMA-48/8.3.91] PFS: PAGE FORMAT SELECTION  52
  [ECMA-48/8.3.95] PP: PRECEDING PAGE  53
  [ECMA-48/8.3.96] PPA: PAGE POSITION ABSOLUTE  53
  [ECMA-48/8.3.97] PPB: PAGE POSITION BACKWARD  53
  [ECMA-48/8.3.98] PPR: PAGE POSITION FORWARD  53
  [ECMA-48/8.3.99] PTX: PARALLEL TEXTS  53
  [ECMA-48/8.3.100] PU1: PRIVATE USE ONE  54
  [ECMA-48/8.3.101] PU2: PRIVATE USE TWO  54
  [ECMA-48/8.3.102] QUAD: QUAD  55
  [ECMA-48/8.3.103] REP: REPEAT  55
  [ECMA-48/8.3.105] RIS: RESET TO INITIAL STATE  55
  [ECMA-48/8.3.107] SACS: SET ADDITIONAL CHARACTER SEPARATION  56
  [ECMA-48/8.3.108] SAPV: SELECT ALTERNATIVE PRESENTATION VARIANTS  57
  [ECMA-48/8.3.109] SCI: SINGLE CHARACTER INTRODUCER  58
  [ECMA-48/8.3.110] SCO: SELECT CHARACTER ORIENTATION  58
  [ECMA-48/8.3.112] SCS: SET CHARACTER SPACING  59
  [ECMA-48/8.3.113] SD: SCROLL DOWN  59
  [ECMA-48/8.3.116] SEF: SHEET EJECT AND FEED  60
  [ECMA-48/8.3.118] SHS: SELECT CHARACTER SPACING  63
  [ECMA-48/8.3.119] SI: SHIFT-IN  63
  [ECMA-48/8.3.121] SL: SCROLL LEFT  63
  [ECMA-48/8.3.124] SLS: SET LINE SPACING  64
  [ECMA-48/8.3.126] SO: SHIFT-OUT  65
  [ECMA-48/8.3.127] SOH: START OF HEADING  65
  [ECMA-48/8.3.129] SPA: START OF GUARDED AREA  66
  [ECMA-48/8.3.132] SPI: SPACING INCREMENT  67
  [ECMA-48/8.3.134] SPQR: SELECT PRINT QUALITY AND RAPIDITY  68
  [ECMA-48/8.3.135] SR: SCROLL RIGHT  68
  [ECMA-48/8.3.136] SRCS: SET REDUCED CHARACTER SEPARATION  68
  [ECMA-48/8.3.138] SSA: START OF SELECTED AREA  69
  [ECMA-48/8.3.139] SSU: SELECT SIZE UNIT  69
  [ECMA-48/8.3.140] SSW: SET SPACE WIDTH  70
  [ECMA-48/8.3.141] SS2: SINGLE-SHIFT TWO  70
  [ECMA-48/8.3.142] SS3: SINGLE-SHIFT THREE  70
  [ECMA-48/8.3.145] STS: SET TRANSMIT STATE  71
  [ECMA-48/8.3.146] STX: START OF TEXT  71
  [ECMA-48/8.3.147] SU: SCROLL UP  71
  [ECMA-48/8.3.148] SUB: SUBSTITUTE  71
  [ECMA-48/8.3.149] SVS: SELECT LINE SPACING  71
  [ECMA-48/8.3.150] SYN: SYNCHRONOUS IDLE  72
  [ECMA-48/8.3.157] TSS: THIN SPACE SPECIFICATION  73

  [ECMA-48/7.2.1]  Mode 8  BDSM: BI-DIRECTIONAL SUPPORT MODE  21
  > [ECMA-48/7.2.2]  Mode 3  CRM: Control Representation Mode  22
  > [ECMA-48/7.2.3]  Mode 9  DCSM: Device Component Select Mode  22
  > [ECMA-48/7.2.4]  Mode 6  ERM: Erasure Mode  22
  [ECMA-48/7.2.5]  Mode 13 FEAM: FORMAT EFFECTOR ACTION MODE  22
  [ECMA-48/7.2.6]  Mode 14 FETM: FORMAT EFFECTOR TRANSFER MODE  22
  [ECMA-48/7.2.7]  Mode 1  GATM: GUARDED AREA TRANSFER MODE  23
  > [ECMA-48/7.2.8]  Mode 21 GRCM: Graphic Rendition Combination Mode  23
  > [ECMA-48/7.2.9]  Mode 10 HEM: Character Editing Mode  23
  [ECMA-48/7.2.10] Mode 4  IRM: INSERTION REPLACEMENT MODE  24
  [ECMA-48/7.2.11] Mode 2  KAM: KEYBOARD ACTION MODE  24
  [ECMA-48/7.2.12] Mode 15 MATM: MULTIPLE AREA TRANSFER MODE  24
  [ECMA-48/7.2.13] Mode 11 PUM: POSITIONING UNIT MODE  24
  [ECMA-48/7.2.14] Mode 17 SATM: SELECTED AREA TRANSFER MODE  24
  [ECMA-48/7.2.15] Mode 12 SRM: SEND/RECEIVE MODE  24
  [ECMA-48/7.2.16] Mode 5  SRTM: STATUS REPORT TRANSFER MODE  24
  > [ECMA-48/7.2.17] Mode 18 TSM: TABULATION STOP MODE  25
  [ECMA-48/7.2.18] Mode 16 TTM: TRANSFER TERMINATION MODE  25
  > [ECMA-48/7.2.19] Mode 7  VEM: Line Editing Mode  25
  > [ECMA-48/7.2.20] Mode 22 ZDM: ZERO DEFAULT MODE


  ZDM affects CBT, CHA, CHT, CNL, CPL, CPR, CVT,
  DCH, DL, ECH, GSM, HPA, HPB, HPR, HVP, ICH, IL, NP, PP, PPA, PPB, PPR, REP, SD, SL, SR, SU,
  TCC, VPA, VPB, VPR
  > CUB, CUD, CUF, CUP, CUU



------------------------------------------------------------------------------
  Done
------------------------------------------------------------------------------

2020-02-29

* URL の #... でページ内自動生成 id にジャンプする様にする。

  現在、自動生成したページ内 id にジャンプできる様にしている。
  然し単純にそれをクリックしても、思うようにジャンプしてくれない。

  | a 試しに自分でリンクを生成して a.click() を呼び出してみる。然し動かない。
  |   var hash = window.location.hash;
  |   var a = document.createElement('a');
  |   document.body.appendChild(a);
  |   a.href = "#";
  |   a.click();
  |   a.href = hash;
  |   a.click();
  |   document.body.removeChild(a);
  |
  | b location.href に代入する方法
  |   https://stackoverflow.com/questions/5007530/how-do-i-scroll-to-an-element-using-javascript
  |   ここに書かれている方法を試してみたがこれも動かない。
  |   コメントに書かれている内容から推測して "#" の代入をしない様にしてみたがそれでも動かない。
  |
  |   →実はその頁に居て F5 を押しても効かない様だ。他の頁から飛んだ時にはちゃんと動いた。
  |
  | c DOMContentLoaded で id の割り当てを実行するべきなのでは。
  |   そうすれば特別な処置をしなくてもちゃんと飛んでくれる可能性。
  |   →と思って確認してみたが実は元から DOMContentLoaded を使っていた。
  |   然し、現在の実装では agh.dom.js を使っている。
  |   これによって処理が遅延されている事により動いていないのでは。

  取り敢えず b の方針で動いている。

2020-02-14

* Kitty のソースコードを少し確認した。

  | * Kitty は余り好きではない。印度人が書いている。
  |   その事から予想がつくように、高らかに良さそうな事を書いているが、
  |   その実、その謳い文句の内容ですら他の端末エミュレータに劣る。
  |
  | * Python と C の混合である。汚いソースコードである。
  |   謳い文句では簡単な書き方でモジュール化されて簡単に拡張できる様に云々と書かれているが、
  |   構造的に汚いし整理されていないし、というか寧ろ端末のコアの部分は滅茶苦茶に結合している。
  |   関数の中もネストの仕方が変だしネストも深いし変なマクロを大量に定義して実装されている。
  |   C言語のコンパイラ拡張を使っている。
  |   これに比べたら contra のコードは実に美しいと思えてしまう。
  |
  | * 謳い文句では最近のターミナル機能に対応している云々と言っていて
  |   更には新しい拡張コードを云々と言っているが実のところ既存の端末機能も満足に実装せずに
  |   勝手に独自の物を実装しているだけである。画像フォーマットもその一つである。
  |
  |   % 而も下線機能の内、点線と破線に至っては自分で提唱しておきながらずっと未実装で、
  |   % mintty の方が先に実装してしまうという始末である。何だこれは。
  |   と思ったらこれは mintty が先に実装した様だ。以下の通り。
  |   https://github.com/kovidgoyal/kitty/issues/226#issuecomment-381665023
  |
  | * 更に昔からある KiTTY という名前の端末エミュレータと名前が被っている。
  |   既に在る物に対する配慮もない。追記: 更に以下の Issue を見つけた。
  |   作者の人となりが見える。暫く放置した後で当初は名前を変えようと思った等と完全な嘘をついている。
  |   https://github.com/kovidgoyal/kitty/issues/9
  |
  | 既存の端末機能を実装する前に勝手に新しい機能を実装しているから
  | 多少注目を浴びているだけで端末エミュレータとしては微妙。
  |
  | * また騙された。cross-platform というから当然 Win 版もあるのかと思ったらない。
  |   macOS と Linux しかサポートしていない。
  |
  | Kitty の DA2 が知りたいがうーん。screen.c (report_device_attributes) にあった。
  | 然し CSI > 1 ; MAJOR ; MINOR c という物だった。xterm を模倣するタイプか。
  | 而も MAJOR は xterm に合わせて設定している訳ではなくて Kitty 自身の version を設定している。
  |
  | どうも GitHub における議論を見ていると Kitty の作者は規格なんて
  | 滅茶苦茶だから従う必要はないと思っているらしい。
  | そう思えば何となくやっている事の半分ぐらいは理解できる。
  | 然し、実際にちゃんとした形式で実装することができていないから説得力が全くないだけなのである。

  * Kitty の DA2 は CSI > 1 ; MAJOR ; MINOR c。DA1 は CSI ? 62 ; c である。
  * Kitty は 4:0, 4:1, 4:2, 4:3 を実装し mintty が追随して 4:4, 4:5 を与えた。
  * 1:2 や 8:7 73-75 は Kitty にはない。恐らく mintty 独自の仕様。

* RLogin のモード調査

  <code>TextRam.cpp:6072:int CTextRam::OptionToIndex(int value, BOOL bAnsi)</code> に内部番号との対応がある。
  どうも RLogin が 84xx を採用しているのは内部に 8x32 = 512bit のベクタを用意していて、
  その一番最後の 400 番台を内部用に確保していて、其処に切りの良い 8000 を足したからという事なのだろうか。
  全然見つからないと思ったら TextRam.h が sjis で保存されていた所為で grep がバイナリファイルと思って飛ばしていたのだった。

2016-10-12

* [2016-09-23] ECMA-48/5.4.1 の内容を CSI シーケンスの場所に追加する。

* [2016-09-28] bi-directional について幾ら読んでも分からないと思ったが、
  ECMA TR/53 にまとめて書かれている様だ。
  あとでこれに一通り目を通すことにする。

  →結局 TR/53 文章の説明を読んでも判然としないが、
  Appendix にある表示の例が参考になる。
  恐らく想像していた動作に近い。
  しかしながら nested strings という仕組みがあって、思っていたのよりはずっと複雑な様だ。
  特に nested strings が設定された時の動作について詳しく文字で書かれていないという事は、
  具体的な動作(どの様に表示されるか)は実装に任されているという事なのだろうか。

  具体的に contra においてどの様に実装するかも含めて、
  master の memo.txt の方で考察を重ねる事にする。

  > Done: SIMD, DCSM

  →実は ECMA-48/6.3/4 にちゃんと表示部がデータ部からどの様に構築されるか書かれていた。
    TR/53 を読んで思ったのと同様に strings の方向性を考慮に入れて並び替えをすればそれで良さそうだ。
    但し、行に跨る string があるのかどうかというのは良くわからない。
    恐らく、規格では VT などの操作をすると動作は未定義と書かれているが
    NEL などについては何も書かれていないので、自然な折り返しによって行を跨る文字列が作られると
    いう想定になっているのではないかと思われる。
    行に跨る string は複雑になるのでサポートはしない事にする。

* [2016-10-02] エスケープシーケンスの記述で \x30 等になっているのを直す。

* やはり変な名称をつけるのは良くないので、
  記憶部・現在記憶位置は JIS に従ってデータ部・現在データ位置に修正する。

2016-10-11

* HVP 抜けている

* escseq.js: cmode-sm, cmode-rm に関しては同じ名前のものがある様なのでリンクは生成しない。
  (というか寧ろ dfn で囲むべきでもないのかもしれない。)

2016-10-07

* SGR: tochk: jis x 0211 の機能とした物は恐らく iso/iec 6429 で追加された物だろう。

2016-09-27

* 制御シーケンスとしているのは制御機能にした方が良い。

  そして制御機能の符号化表現 (coded representation) に色々なものがあって、

  制御文字
    C0 C1
  エスケープシーケンス
    ESC I* F
      ESC F
        ESC 4/0-6/F = C1
    ESC I* P = 私用(I* は許されているか不明)
  制御シーケンス
    CSI P* I* F
  制御列(コマンド列)
    DCS ... ST
    OSC ... ST
    PM ... ST
    APC ... ST
  制御列(文字列)
    SOS ... ST

  という具合になっているのである。

2016-09-26

* DECDHL, DECDWL, DECSWL は行に対して作用する。
